(function($){$("#_gamipress_earned_by").change(function(){if('triggers'==$(this).val())
$('#gamipress-requirements-ui').show();else $('#gamipress-requirements-ui').hide()}).change();$("#requirements-list").sortable({update:function(){$('#requirements-list li').each(function(index,value){$(this).find('input[name="order"]').val(index)})}});$('#requirements-list').on('change','.select-trigger-type',function(){if(!$(this).hasClass('select2-hidden-accessible')){$(this).select2({theme:'default gamipress-select2'})}
var trigger_type=$(this).val();var count=$(this).siblings('.required-count');var count_text=$(this).siblings('.required-count-text');var limit_text=$(this).siblings('.limit-text');var limit=$(this).siblings('.limit');var limit_type=$(this).siblings('.limit-type');if(trigger_type==='earn-points'||trigger_type==='earn-rank'){count.hide();count_text.hide();limit_text.hide();limit.hide();limit_type.hide()}else{count.show();count_text.show();limit_text.show();if(limit_type.val()!=='unlimited'){limit.show()}
limit_type.show()}
var points_selector_required=$(this).siblings('.points-required');var points_type_selector_required=$(this).siblings('.select-points-type-required');if(trigger_type==='earn-points'){points_selector_required.show();points_type_selector_required.show()}else{points_selector_required.hide();points_type_selector_required.hide()}
var rank_type_selector_required=$(this).siblings('.select-rank-type-required');var rank_selector_required=$(this).siblings('.select-rank-required');if(trigger_type==='earn-rank'){rank_type_selector_required.show();rank_type_selector_required.change()}else{rank_type_selector_required.hide();rank_selector_required.hide()}
var achievement_type_selector=$(this).siblings('.select-achievement-type');var achievement_post_selector=$(this).siblings('.select-achievement-post');if(trigger_type==='any-achievement'||trigger_type==='all-achievements'||trigger_type==='specific-achievement'){achievement_type_selector.show();achievement_type_selector.change()}else{achievement_type_selector.hide();achievement_post_selector.hide()}
var post_selector=$(this).siblings('.select-post');if(gamipress_requirements_ui.specific_activity_triggers[trigger_type]!==undefined){post_selector.show().data('post-type',gamipress_requirements_ui.specific_activity_triggers[trigger_type].join(','));if(post_selector.hasClass('select2-hidden-accessible')){post_selector.val('').change().next().show()}else{post_selector.select2({ajax:{url:ajaxurl,dataType:'json',delay:250,type:'POST',data:function(params){return{q:params.term,action:'gamipress_get_posts',post_type:$(this).data('post-type').split(',')}},processResults:function(results,page){if(results===null){return{results:[]}}
var formatted_results=[];results.data.forEach(function(item){formatted_results.push({id:item.ID,text:item.post_title,})});return{results:formatted_results}}},theme:'default gamipress-select2',placeholder:gamipress_requirements_ui.post_placeholder,allowClear:!0,multiple:!1})}}else{post_selector.hide();if(post_selector.hasClass('select2-hidden-accessible')){post_selector.next().hide()}}});$('.select-trigger-type').change();$('#requirements-list').on('change','.select-achievement-type',function(){var $this=$(this);var achievement_post=$this.siblings('.select-achievement-post');var achievement_type=$this.val();var requirement_id=$this.parent('li').attr('data-requirement-id');var requirement_type=$this.siblings('input[name="requirement_type"]').val();var excluded_posts=[$this.siblings('input[name="post_id"]').val()];var trigger_type=$this.siblings('.select-trigger-type').val();if(''!==achievement_type&&'specific-achievement'===trigger_type){$.post(ajaxurl,{action:'gamipress_requirement_achievement_post',requirement_id:requirement_id,requirement_type:requirement_type,achievement_type:achievement_type,excluded_posts:excluded_posts},function(response){achievement_post.html(response);achievement_post.show()})}else{achievement_post.hide()}});$('#requirements-list').on('change','.select-rank-type-required',function(){var $this=$(this);var rank_selector=$this.siblings('.select-rank-required');var rank_type=$this.val();var requirement_id=$this.parent('li').attr('data-requirement-id');var trigger_type=$this.siblings('.select-trigger-type').val();if(''!==rank_type&&'earn-rank'===trigger_type){rank_selector.hide();$('<span class="spinner is-active" style="float: none;"></span>').insertAfter($this);$.post(ajaxurl,{action:'gamipress_get_ranks_options_html',requirement_id:requirement_id,post_type:rank_type},function(response){$this.next('.spinner').remove();rank_selector.html(response);rank_selector.show()})}else{rank_selector.hide()}});$('#requirements-list').on('change','.limit-type',function(){var limit_type_selector=$(this);if(limit_type_selector.val()==='unlimited'){limit_type_selector.siblings('.limit').hide()}else{limit_type_selector.siblings('.limit').show()}});$('.limit-type').change()})(jQuery);function gamipress_add_requirement(post_id){jQuery('.requirements-spinner').addClass('is-active');jQuery.post(ajaxurl,{action:'gamipress_add_requirement',post_id:post_id},function(response){jQuery(response).appendTo('#requirements-list');var new_requirement_menu_order=Number(jQuery('#requirements-list li.requirement-row').eq(-2).find('input[name="order"]').val())+1;jQuery('#requirements-list li.requirement-row:last').find('input[name="order"]').val(new_requirement_menu_order);jQuery('#requirements-list li.requirement-row:last').find('.select-trigger-type').change();jQuery('#requirements-list li.requirement-row:last').find('.limit-type').change();jQuery('.requirements-spinner').removeClass('is-active')})}
function gamipress_delete_requirement(requirement_id){jQuery('.requirement-'+requirement_id).hide();jQuery.post(ajaxurl,{action:'gamipress_delete_requirement',requirement_id:requirement_id},function(response){jQuery('.requirement-'+requirement_id).remove()})}
function gamipress_update_requirements(){jQuery('.requirements-spinner').addClass('is-active');var requirement_data={action:'gamipress_update_requirements',requirements:[]};jQuery('.requirement-row').each(function(){var requirement=jQuery(this);var trigger_type=requirement.find('.select-trigger-type').val();var requirement_details={requirement_id:requirement.find('input[name="requirement_id"]').val(),requirement_type:requirement.find('input[name="requirement_type"]').val(),order:requirement.find('input[name="order"]').val(),points_required:requirement.find('.points-required').val(),points_type_required:requirement.find('.select-points-type-required').val(),rank_type_required:requirement.find('.select-rank-type-required').val(),rank_required:requirement.find('.select-rank-required').val(),required_count:requirement.find('.required-count').val(),limit:requirement.find('.limit').val(),limit_type:requirement.find('.limit-type').val(),trigger_type:trigger_type,achievement_type:requirement.find('.select-achievement-type').val(),achievement_post:(gamipress_requirements_ui.specific_activity_triggers[trigger_type]!==undefined?requirement.find('.select-post').val():requirement.find('select.select-achievement-post').val()),title:requirement.find('.requirement-title .title').val()};if(requirement_details.requirement_type==='points-award'){requirement_details.points=requirement.find('.points').val();requirement_details.points_type=requirement.find('input[name="points_type"]').val();requirement_details.maximum_earnings=requirement.find('.maximum-earnings').val()}
requirement.trigger('update_requirement_data',[requirement_details,requirement]);requirement_data.requirements.push(requirement_details)});jQuery.post(ajaxurl,requirement_data,function(response){var titles=jQuery.parseJSON(response);jQuery.each(titles,function(id,value){jQuery('#requirement-'+id+'-title').val(value)});jQuery('.requirements-spinner').removeClass('is-active')})}